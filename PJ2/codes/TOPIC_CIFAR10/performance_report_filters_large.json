{
  "experiment_name": "filters_large",
  "test_accuracy": 92.5,
  "total_parameters": 5014922,
  "trainable_parameters": 5014922,
  "inference_time": 1.0619854927062988,
  "training_time": 563.9855027198792,
  "model_structure": "HighPerfCIFAR10Model(   (activation): LeakyReLU(negative_slope=0.1)   (conv1): Sequential(     (0): Conv2d(3, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))     (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)     (2): LeakyReLU(negative_slope=0.1)     (3): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))     (4): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)     (5): LeakyReLU(negative_slope=0.1)     (6): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)     (7): Dropout(p=0.2, inplace=False)   )   (res_block1): Sequential(     (0): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))     (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)     (2): LeakyReLU(negative_slope=0.1)     (3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))     (4): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)     (5): LeakyReLU(negative_slope=0.1)   )   (shortcut1): Sequential(     (0): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1))     (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)   )   (conv2): Sequential(     (0): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)     (1): Dropout(p=0.3, inplace=False)   )   (res_block2): Sequential(     (0): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))     (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)     (2): LeakyReLU(negative_slope=0.1)     (3): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))     (4): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)     (5): LeakyReLU(negative_slope=0.1)   )   (shortcut2): Sequential(     (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(1, 1))     (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)   )   (fc): Sequential(     (0): AdaptiveAvgPool2d(output_size=(1, 1))     (1): Flatten(start_dim=1, end_dim=-1)     (2): Linear(in_features=512, out_features=512, bias=True)     (3): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)     (4): LeakyReLU(negative_slope=0.1)     (5): Dropout(p=0.5, inplace=False)     (6): Linear(in_features=512, out_features=10, bias=True)   ) )"
}